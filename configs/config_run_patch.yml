
files:
  raw_dirs: ['/gpfs/CompMicro/projects/dynamorph/microglia/subset_for_tests/mg/JUNE/raw']

  supp_dirs: ['/gpfs/CompMicro/projects/dynamorph/microglia/subset_for_tests/mg/JUNE/supp']

  train_dirs: ['']

  val_dirs: ['']

  weights_dir: ''
  # path to save weights during training, subdirectory of train_dirs


preprocess:
  channels: ["Retardance", "Phase2D", "Brightfield"]
  fov: ['C5-Site_0','C5-Site_1']
  multipage: False
  z_slice: 2


patch:
  channels: [0,1,2]
  fov: ['D3-Site_0','D3-Site_1','D3-Site_2']
  gpus: 1
  window_size: 256
  save_fig: True
  reload: True
  skip_boundary: False


inference:
  model: 'VQ_VAE_z16'
  # VQ_VAE_z16 or UNet

  weights: '/gpfs/CompMicro/projects/dynamorph/CellVAE/save_0005_bkp4.pt'
  # pytorch weight file

  save_output: True
  # write .jpg results from run_vae.process

  gpus: 1
  gpu_id: 3
  fov: ['C5-Site_0','C5-Site_1']
  channels: [0,1,2]
  num_classes: 3
  window_size: 256
  batch_size: 8
  num_pred_rnd: 5
  seg_val_cat: 'mg'


training:
  # model definitions
  model: 'VQ_VAE_z32'
  num_inputs: 2
  num_hiddens: 64
  num_residual_hiddens: 64
  num_residual_layers: 2
  num_embeddings: 512

  # normalization
  channel_mean: [0.4, 0, 0.5]
  channel_std: [0.05, 0.05, 0.05]

  w_a: 1
  w_t: 0.5

  # training parameters
  commitment_cost: 0.25
  alpha: 0.002
  epochs: 5000
  learning_rate: 0.0001
  batch_size: 96
  gpus: True
  gpu_id: 3
  shuffle_data: False
  transform: True


  

